deftype PortalPong;
network.online;

def jpp;
system.println("hallo");

def ref2portal := jlobby.java.util.HashMap.new();

def me := object: {
	def enterPortal(origin, dx, dy) { jpp.spawnBall(ref2portal.get(origin), dx,dy) }
};
export: me as: PortalPong;

def return := object: {
	def handshake(jpp_) { jpp := jpp_; };
	def enterPortal(pp, dx, dy) { pp<-enterPortal(me, dx, dy); nil };
};


whenever: PortalPong discovered: { |pp|
	if: (!ref2portal.containsKey(pp)) then: {
		ref2portal.put(pp, jpp.spawnPortal(pp));
		
		whenever: pp disconnected: {
			ref2portal.get(pp).hide();
		};
		
		whenever: pp reconnected: {
			ref2portal.get(pp).show();
		};
	}
};



object: { def return := return }